http://survivejs.com/webpack/introduction/
http://survivejs.com/react/introduction/

https://webpack.github.io/

https://facebook.github.io/react/

http://todomvc.com/
https://github.com/tastejs/todomvc

https://github.com/survivejs/react

Browserify, Brunch, or Webpack

http://jspm.io/

https://github.com/systemjs/systemjs

Webpack 2 will support System.js semantics as well.

http://gruntjs.com/
https://www.npmjs.com/package/grunt-webpack

http://gulpjs.com/
https://www.npmjs.com/package/gulp-webpack

https://github.com/flyjs/fly

http://browserify.org/

http://brunch.io/
https://github.com/brunch/hmr-brunch

sudo npm install webpack -g
npm install css-loader style-loader

http://webpack.github.io/docs/tutorials/getting-started/

webpack
prettier output:
webpack --progress --colors
Watch mode:
webpack --progress --colors --watch

Development server:
The development server is even better.
sudo npm install webpack-dev-server -g
webpack-dev-server --progress --colors

https://github.com/gaearon/babel-plugin-react-transform

http://livereload.com/

https://www.browsersync.io/

https://github.com/milankinen/livereactload

https://webpack.github.io/docs/comparison.html

https://www.vagrantup.com/
https://www.npmjs.com/package/nvm
https://github.com/creationix/nvm/blob/master/README.markdown
https://www.npmjs.com/package/es6-promise

mkdir webpack-demo && cd webpack-demo && npm init -y

https://docs.npmjs.com/files/package.json

npm i webpack --save-dev # or just -D if you want to save typing
node_modules/.bin/webpack
We can use --save and --save-dev to separate application and development dependencies.
The former will install and write to package.json dependencies field
whereas the latter will write to devDependencies instead.

https://www.npmjs.com/package/html-webpack-plugin

webpack --display-modules
https://stackoverflow.com/questions/28858176/what-does-webpack-mean-by-xx-hidden-modules

It can be convenient to use a tool like serve (npm i serve -g) to serve the build directory.
In this case, execute serve at the output directory and head to localhost:3000 at your browser.
You can configure the port through the --port parameter.

https://nodejs.org/api/path.html

https://www.npmjs.com/package/favicons-webpack-plugin

It can be convenient to use a tool like serve (npm i serve -g) to serve the build directory.
In this case, execute serve at the output directory and head to localhost:3000 at your browser.
You can configure the port through the --port parameter.

чтобы не вызывать каждый раз - node_modules/.bin/webpack, можно добавить в package.json:
...
"scripts": {
  "build": "webpack"
},
...
и затем запускать просто npm run build или npm run.

https://preactjs.com/
https://github.com/Lucifier129/react-lite

https://github.com/Matt-Esch/virtual-dom
https://github.com/paldepind/snabbdom

https://www.npmjs.com/package/react-dom

https://facebook.github.io/react-native/
https://github.com/necolas/react-native-web
https://github.com/Yomguithereal/react-blessed
https://projectseptemberinc.gitbooks.io/gl-react/content/
https://github.com/Flipboard/react-canvas

https://facebook.github.io/react/docs/top-level-api.html
https://facebook.github.io/jsx/
https://medium.com/@housecor/react-s-jsx-the-other-side-of-the-coin-2ace7ab62b98#.19bukk7ld

https://github.com/dominictarr/hyperscript
https://www.npmjs.com/package/hyperscript-helpers

https://github.com/webpack/react-starter
https://github.com/HenrikJoreteg/hjs-webpack

https://www.npmjs.com/package/webpack-merge

https://www.npmjs.com/package/webpack-validator

npm i webpack-dev-server --save-dev
webpack-dev-server --inline
webpack-dev-server --inline --hot
webpack-dev-server --inline --hot --port 8000

http://localhost:8000/
http://localhost:8000/webpack-dev-server/

https://www.npmjs.com/package/node-ip

https://webpack.github.io/docs/webpack-dev-middleware.html

https://www.npmjs.com/package/dotenv

https://webpack.github.io/docs/configuration.html#devtool
https://webpack.github.io/docs/configuration.html#output-sourcemapfilename
https://webpack.github.io/docs/list-of-plugins.html#sourcemapdevtoolplugin

minification:
запустить npm run build и увидем сколько весит файл app.js
затем запустить:
webpack -p
это сокращение от:
webpack --optimize-minimize

http://lisperator.net/uglifyjs/

https://www.npmjs.com/package/babel-plugin-remove-console

https://www.npmjs.com/package/uglify-loader

https://www.npmjs.com/package/babel-plugin-transform-inline-environment-variables
https://babeljs.io/docs/plugins/transform-inline-environment-variables/

https://webpack.github.io/docs/list-of-plugins.html#commonschunkplugin

https://webpack.github.io/docs/code-splitting.html

https://www.npmjs.com/package/clean-webpack-plugin

https://github.com/purifycss/purifycss
https://www.npmjs.com/package/purifycss-webpack-plugin
http://purecss.io/

npm run stats
http://webpack.github.io/analyse/
https://chrisbateman.github.io/webpack-visualizer/
https://alexkuz.github.io/webpack-chart/
https://github.com/robertknight/webpack-bundle-size-analyzer
https://www.npmjs.com/package/stats-webpack-plugin

https://www.npmjs.com/package/gh-pages

npm run deploy

https://www.npmjs.com/package/babel-plugin-webpack-loaders






























































































































































































































































































































































































































































































































































